// This file is auto-generated by @hey-api/openapi-ts

export const $CreateUserDto = {
    type: 'object',
    properties: {
        username: {
            type: 'string',
            minLength: 1,
            maxLength: 20
        },
        password: {
            type: 'string',
            minLength: 1,
            maxLength: 32
        }
    },
    required: ['username', 'password']
} as const;

export const $GetManyUserResponseDto = {
    type: 'object',
    properties: {
        data: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/User'
            }
        },
        count: {
            type: 'number'
        },
        total: {
            type: 'number'
        },
        page: {
            type: 'number'
        },
        pageCount: {
            type: 'number'
        }
    },
    required: ['data', 'count', 'total', 'page', 'pageCount']
} as const;

export const $Role = {
    type: 'object',
    properties: {
        id: {
            type: 'number'
        },
        name: {
            type: 'string'
        },
        user: {
            '$ref': '#/components/schemas/User'
        }
    },
    required: ['id', 'name', 'user']
} as const;

export const $File = {
    type: 'object',
    properties: {
        key: {
            type: 'string'
        },
        originalName: {
            type: 'string'
        },
        size: {
            type: 'number'
        },
        mimeType: {
            type: 'string'
        },
        user: {
            '$ref': '#/components/schemas/User'
        },
        deletedAt: {
            format: 'date-time',
            type: 'string'
        }
    },
    required: ['key', 'originalName', 'size', 'mimeType', 'user', 'deletedAt']
} as const;

export const $User = {
    type: 'object',
    properties: {
        id: {
            type: 'number'
        },
        username: {
            type: 'string'
        },
        password: {
            type: 'string'
        },
        roles: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Role'
            }
        },
        files: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/File'
            }
        }
    },
    required: ['id', 'username', 'password', 'roles', 'files']
} as const;

export const $CreateManyUserDto = {
    type: 'object',
    properties: {
        bulk: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/User'
            }
        }
    },
    required: ['bulk']
} as const;

export const $PasswordLoginDto = {
    type: 'object',
    properties: {
        username: {
            type: 'string',
            minLength: 1,
            maxLength: 20
        },
        password: {
            type: 'string',
            minLength: 1,
            maxLength: 32
        }
    },
    required: ['username', 'password']
} as const;

export const $CreateRoleDto = {
    type: 'object',
    properties: {}
} as const;

export const $UpdateRoleDto = {
    type: 'object',
    properties: {}
} as const;

export const $CreateGeoObjectDto = {
    type: 'object',
    properties: {}
} as const;

export const $UpdateGeoObjectDto = {
    type: 'object',
    properties: {}
} as const;

export const $GeoObject = {
    type: 'object',
    properties: {
        anchor: {
            type: 'object'
        },
        anchor_latitude: {
            type: 'number'
        },
        metadata: {
            type: 'string',
            nullable: true
        },
        createdAt: {
            format: 'date-time',
            type: 'string'
        },
        updatedAt: {
            format: 'date-time',
            type: 'string'
        },
        scene: {
            '$ref': '#/components/schemas/Scene'
        }
    },
    required: ['anchor', 'anchor_latitude', 'metadata', 'createdAt', 'updatedAt', 'scene']
} as const;

export const $Scene = {
    type: 'object',
    properties: {
        children: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/GeoObject'
            }
        }
    },
    required: ['children']
} as const;

export const $GeoImage = {
    type: 'object',
    properties: {
        ossFile: {
            '$ref': '#/components/schemas/File'
        },
        anchor: {
            type: 'object'
        },
        anchor_latitude: {
            type: 'number'
        },
        metadata: {
            type: 'string',
            nullable: true
        },
        createdAt: {
            format: 'date-time',
            type: 'string'
        },
        updatedAt: {
            format: 'date-time',
            type: 'string'
        },
        scene: {
            '$ref': '#/components/schemas/Scene'
        }
    },
    required: ['ossFile', 'anchor', 'anchor_latitude', 'metadata', 'createdAt', 'updatedAt', 'scene']
} as const;

export const $CreateGeoCommentDto = {
    type: 'object',
    properties: {}
} as const;

export const $UpdateGeoCommentDto = {
    type: 'object',
    properties: {}
} as const;

export const $CreateStoryboardDto = {
    type: 'object',
    properties: {}
} as const;

export const $UpdateStoryboardDto = {
    type: 'object',
    properties: {}
} as const;

export const $CreateSceneDto = {
    type: 'object',
    properties: {}
} as const;

export const $UpdateSceneDto = {
    type: 'object',
    properties: {}
} as const;