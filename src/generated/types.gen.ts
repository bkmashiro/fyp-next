// This file is auto-generated by @hey-api/openapi-ts

export type CreateUserDto = {
    username: string;
    password: string;
};

export type GetManyUserResponseDto = {
    data: Array<User>;
    count: number;
    total: number;
    page: number;
    pageCount: number;
};

export type Role = {
    id: number;
    name: string;
    user: User;
};

export type User = {
    id: number;
    username: string;
    password: string;
    roles: Array<Role>;
};

export type CreateManyUserDto = {
    bulk: Array<User>;
};

export type PasswordLoginDto = {
    username: string;
    password: string;
};

export type CreateRoleDto = {
    [key: string]: unknown;
};

export type UpdateRoleDto = {
    [key: string]: unknown;
};

export type GetHelloResponse = (string);

export type GetHelloError = unknown;

export type RegisterData = {
    body: CreateUserDto;
};

export type RegisterResponse = (User);

export type RegisterError = unknown;

export type GetOneData = {
    path: {
        id: number;
    };
    query?: {
        /**
         * Reset cache (if was enabled). <a href="https://github.com/nestjsx/crud/wiki/Requests#cache" target="_blank">Docs</a>
         */
        cache?: number;
        /**
         * Selects resource fields. <a href="https://github.com/nestjsx/crud/wiki/Requests#select" target="_blank">Docs</a>
         */
        fields?: Array<(string)>;
        /**
         * Adds relational resources. <a href="https://github.com/nestjsx/crud/wiki/Requests#join" target="_blank">Docs</a>
         */
        join?: Array<(string)>;
    };
};

export type GetOneResponse = (User);

export type GetOneError = unknown;

export type UpdateOneData = {
    body: User;
    path: {
        id: number;
    };
};

export type UpdateOneResponse = (User);

export type UpdateOneError = unknown;

export type ReplaceOneData = {
    body: User;
    path: {
        id: number;
    };
};

export type ReplaceOneResponse = (User);

export type ReplaceOneError = unknown;

export type DeleteOneData = {
    path: {
        id: number;
    };
};

export type DeleteOneResponse = (unknown);

export type DeleteOneError = unknown;

export type GetManyData = {
    query?: {
        /**
         * Reset cache (if was enabled). <a href="https://github.com/nestjsx/crud/wiki/Requests#cache" target="_blank">Docs</a>
         */
        cache?: number;
        /**
         * Selects resource fields. <a href="https://github.com/nestjsx/crud/wiki/Requests#select" target="_blank">Docs</a>
         */
        fields?: Array<(string)>;
        /**
         * Adds filter condition. <a href="https://github.com/nestjsx/crud/wiki/Requests#filter" target="_blank">Docs</a>
         */
        filter?: Array<(string)>;
        /**
         * Adds relational resources. <a href="https://github.com/nestjsx/crud/wiki/Requests#join" target="_blank">Docs</a>
         */
        join?: Array<(string)>;
        /**
         * Limit amount of resources. <a href="https://github.com/nestjsx/crud/wiki/Requests#limit" target="_blank">Docs</a>
         */
        limit?: number;
        /**
         * Offset amount of resources. <a href="https://github.com/nestjsx/crud/wiki/Requests#offset" target="_blank">Docs</a>
         */
        offset?: number;
        /**
         * Adds OR condition. <a href="https://github.com/nestjsx/crud/wiki/Requests#or" target="_blank">Docs</a>
         */
        or?: Array<(string)>;
        /**
         * Page portion of resources. <a href="https://github.com/nestjsx/crud/wiki/Requests#page" target="_blank">Docs</a>
         */
        page?: number;
        /**
         * Adds search condition. <a href="https://github.com/nestjsx/crud/wiki/Requests#search" target="_blank">Docs</a>
         */
        s?: string;
        /**
         * Adds sort by field. <a href="https://github.com/nestjsx/crud/wiki/Requests#sort" target="_blank">Docs</a>
         */
        sort?: Array<(string)>;
    };
};

export type GetManyResponse = ((GetManyUserResponseDto | Array<User>));

export type GetManyError = unknown;

export type CreateOneData = {
    body: User;
};

export type CreateOneResponse = (User);

export type CreateOneError = unknown;

export type CreateManyData = {
    body: CreateManyUserDto;
};

export type CreateManyResponse = (Array<User>);

export type CreateManyError = unknown;

export type LoginData = {
    body: PasswordLoginDto;
};

export type LoginResponse = (unknown);

export type LoginError = unknown;

export type GetProfileResponse = ({
    [key: string]: unknown;
});

export type GetProfileError = unknown;

export type TestResponse = ({
    [key: string]: unknown;
});

export type TestError = unknown;

export type CreateData = {
    body: CreateRoleDto;
};

export type CreateResponse = (string);

export type CreateError = unknown;

export type FindAllResponse = (string);

export type FindAllError = unknown;

export type FindOneData = {
    path: {
        id: string;
    };
};

export type FindOneResponse = (string);

export type FindOneError = unknown;

export type UpdateData = {
    body: UpdateRoleDto;
    path: {
        id: string;
    };
};

export type UpdateResponse = (string);

export type UpdateError = unknown;

export type RemoveData = {
    path: {
        id: string;
    };
};

export type RemoveResponse = (string);

export type RemoveError = unknown;

export type GetDictData = {
    path: {
        entity: string;
    };
};

export type GetDictResponse = ({
    [key: string]: unknown;
});

export type GetDictError = unknown;

export type GetAllResponse = (Array<(string)>);

export type GetAllError = unknown;

export type UploadFileResponse = (unknown);

export type UploadFileError = unknown;

export type GetFileData = {
    path: {
        key: string;
    };
};

export type GetFileResponse = (unknown);

export type GetFileError = unknown;